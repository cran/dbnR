# Generated by roxygen2: do not edit by hand

S3method("$<-",dbn.fit)
S3method("[[<-",dbn.fit)
S3method("nodes<-",bn)
S3method("nodes<-",bn.fit)
S3method("nodes<-",dbn)
S3method("nodes<-",dbn.fit)
S3method(AIC,dbn)
S3method(AIC,dbn.fit)
S3method(BIC,dbn)
S3method(BIC,dbn.fit)
S3method(all,equal.dbn)
S3method(all,equal.dbn.fit)
S3method(as.character,dbn)
S3method(coef,dbn.fit)
S3method(degree,bn)
S3method(degree,bn.fit)
S3method(degree,dbn)
S3method(degree,dbn.fit)
S3method(fitted,dbn.fit)
S3method(logLik,dbn)
S3method(logLik,dbn.fit)
S3method(mean,dbn.fit)
S3method(nodes,bn)
S3method(nodes,bn.fit)
S3method(nodes,dbn)
S3method(nodes,dbn.fit)
S3method(plot,dbn)
S3method(plot,dbn.fit)
S3method(predict,dbn.fit)
S3method(print,dbn)
S3method(print,dbn.fit)
S3method(rbn,dbn.fit)
S3method(residuals,dbn.fit)
S3method(score,bn)
S3method(score,dbn)
S3method(sigma,dbn.fit)
export("nodes<-")
export(calc_mu)
export(calc_sigma)
export(degree)
export(filter_same_cycle)
export(filtered_fold_dt)
export(fit_dbn_params)
export(fold_dt)
export(forecast_ts)
export(generate_random_network_exp)
export(learn_dbn_struc)
export(mvn_inference)
export(nodes)
export(plot_dynamic_network)
export(plot_static_network)
export(predict_bn)
export(predict_dt)
export(reduce_freq)
export(score)
export(shift_values)
export(smooth_ts)
export(time_rename)
import(data.table)
importFrom(R6,"R6Class")
importFrom(Rcpp,sourceCpp)
importFrom(bnlearn,`nodes<-`)
importFrom(bnlearn,degree)
importFrom(bnlearn,nodes)
importFrom(bnlearn,rbn)
importFrom(bnlearn,score)
importFrom(graphics,"lines")
importFrom(graphics,"plot")
importFrom(magrittr,"%>%")
importFrom(stats,"sd")
importFrom(stats,"ts")
importFrom(stats,AIC)
importFrom(stats,BIC)
importFrom(stats,coef)
importFrom(stats,fitted)
importFrom(stats,logLik)
importFrom(stats,residuals)
importFrom(stats,runif)
importFrom(stats,sigma)
useDynLib(dbnR, .registration = TRUE)
